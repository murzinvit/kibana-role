---
    - name: Upload .tar.gz file containing binaries from local storage
      copy:
        src: "kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
        dest: "/tmp/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
        mode: 0755
      register: upload_kibana
      until: upload_kibana is succeeded
      tags: upkibana
    - name: Ensure installation dir exists
      become: true
      file:
        state: directory
        path: "{{ kibana_home }}"
      tags: dirkibana
    - name: Extract Kibana in the installation directory
      become: true
      unarchive:
        copy: false
        src: "/tmp/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
        dest: "{{ kibana_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ kibana_home }}/bin"
      tags: unkibana
    - name: Set environment for Kibana
      become: true
      template:
         src: templates/kbn.sh.j2
         dest: /etc/profile.d/kbn.sh
         mode: 0755
      tags: kibana
    - name: Set kibana.yml
      become: true
      template:
         src: templates/kibana.yml.j2
         dest: "{{ kibana_home }}/config/kibana.yml"
         mode: 0755
      tags: kibana
    - name: Ensure user kibana exists
      user:
        user: kibana
        group: root
        uid: 2020
        password: "{{ 'pass' | password_hash('sha512') }}"
        state: present
    - name: Set own to kibana directory
      file:
         path: /opt/kibana/
         recurse: yes
         state: directory
         owner: kibana
         mode: 0777
      tags: Set_own
    - name: Start Kibana 
      become_user: kibana
      become_method: su
      shell: /opt/kibana/7.13.2/bin/kibana start

