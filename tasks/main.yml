---
    - name: Upload .tar.gz file containing binaries from local storage
      copy:
        src: "kibana_64.tar.gz"
        dest: "/tmp/kibana_64.tar.gz"
      register: download_kibana
      until: download_kibana is succeeded
      tags: upkibana
    - name: Ensure installation dir exists
      become: true
      file:
        state: directory
        path: "/opt/kibana"
      tags: dirkibana
    - name: Extract Kibana in the installation directory
      become: true
      unarchive:
        copy: false
        src: "/tmp/kibana_64.tar.gz"
        dest: "/opt/kibana"
        extra_opts: [--strip-components=1]
        creates: "/opt/kibana/bin/kibana"
      tags: unkibana
#    - name: Install Kibana
#      become: true
#      shell: cd /tmp/ && dpkg -i kibana_64.deb
#      tags: kibana,skip_ansible_lint
#    - name: Easiest config kibana
#      template:
#         src: templates/kibana.yml.j2
#         dest: /etc/kibana/kibana.yml
#         mode: 0555
#---
#    - name: Set facts for Java 11 vars
#      set_fact:
#        java_home: "/opt/jdk/{{ java_jdk_version }}"
#      tags: java
#    - name: Upload .tar.gz file containing binaries from local storage
#      copy:
#        src: "{{ java_oracle_jdk_package }}"
#        dest: "/tmp/jdk-{{ java_jdk_version }}.tar.gz"
#      register: download_java_binaries
#      until: download_java_binaries is succeeded
#      tags: java
#        - name: Extract java in the installation directory
#      become: true
#      unarchive:
#        copy: false
#        src: "/tmp/jdk-{{ java_jdk_version }}.tar.gz"
#        dest: "{{ java_home }}"
#        extra_opts: [--strip-components=1]
#        creates: "{{ java_home }}/bin/java"
#      tags:
#        - java
#    - name: Export environment variables
#      become: true
#      template:
#        src: jdk.sh.j2
#        dest: /etc/profile.d/jdk.sh
#      tags: java
#